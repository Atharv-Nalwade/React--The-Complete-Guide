React allows you to create reuasble and reactive components consiting of HTML and CSS

/*
 npm uninstall -g create-react-app

npm cache clean --force”

npm cache verify

npx create-react-app my-app

cd my-app

npm start
*/

when in vs code when we write npm install it downloads all dependencies writtem in package.json and store it in project folder
Also index.js code would not work in normal editor as we cannot import css file in js file the npm start does some transformations and tells browser to include the css file

index.js is first file that runs

const root=ReactDOM.createRoot(document.getElementById('root')); tells react the place to render the react application
root.render(<App />) 
---> 
You can modify everything in the index.html.
Entire content of <div id="root"></div> will just be replaced with the React APP file

./ is look in the same folder as in where the current opened file is 

App is component

JSX is Js and Html

In react we builod oour custom html components


In  react we build component tree where appis head and componentsd are wrote below it in hierarchy

A COMPONENT IN REACT IS JS FUNCTION 

-------We do not import our componets in index.js file only app is rendered there we import it in app file and put it in return of app

React components first letter must be captial if small it is interpreted as html comp.

To use componet in app.js file we write the impoterd as html tag eg 
    import ExpenseItem from "./ExpesneItems"
    <ExpenseItem></ExpenseItem>
    
------ In recat return statement we cannot return two root ele i.e  all should be wrapped by sometghing div,div under div wrap all around

In react's html return part we use className instead of class as in html

To run basic js inside jsx code snippets is ude {---} curly braces and that will run it in html of return its like ejs

To send a data to a componet we can do it while calling the component in base file like <componet.</component> by adding attributes to the components
like <componernt tile="any_name"></component> 
or to run js inside it title={somejs }  

--- Now when we send multiple attr from one side we need to collect it or store it on other side i.e to the place where they are received
    that parameters are not sent as different paraments but instead as one sigle object we can call it anythinh it recoomended to call as props and they are senta s       key value pairs like props will have name:"Atharv"
    The key in the props object is what you have sent on the other side i.e while writing componets and givings attributes to it like if name is passed there here use 
    props.name
    
-- Prop sare send data to components    

To build a kind of wrapper for our ele we can create another component 
The important thing to note here is that children are a special prop that is used to pass the data from the parent component to the children component but this data must be enclosed within the parent’s opening and closing tag. This is used mostly in some wrapper component by which we have to pass the data onto the next component and also the data which we pass its static data ( in most cases ) because for dynamic data there is another way to pass props to the component. 

When we use a make a component and wwrite the it as an tag i nother file <myComonept> ----- </myCompnent> the content of teh custom component is children is accesible inside the custom made comonent using props.children

Question 4:
What does "declarative" mean?
You define the desired outcome (e.g. a target UI) and let the library (React) figure out the steps.

-- Any js inside a return statement of a component is written inside {----} like title={expenses[0].id} amount={expenses[0].amt}

   and on other side we get all attr in a single object
   
   function anyname (props){
   props.id ---> to acess the properties sent on other side 
   props.amt
   }
   
--- Sometimes we just need a wrapper to wrap things that have just have <div classname="any_name">TO be wrapped contents </div>
    or a custom component ( eg. div) 
    <card>-------</card>
    to pass data between the card 
    
--- Children is used to write data between custom component  custom componet like card
    and to aceess data between them written in parent comp. write props.children
    
--- even prop receives by default children and they can be used to acees cotent inside somme elses component
    
