   MAP JS method 
   The map() method in JavaScript creates an array by calling a specific function on each element present in the parent array. It is a non-mutating method. Generally map() method is used to iterate over an array and calling function on every element of array.
Syntax:

array.map(function(currentValue, index, arr), thisValue)
Parameters: This method accepts two parameters as mentioned above and described below:

function(currentValue, index, arr): It is required parameter and it runs on each element of array. It contains three parameters which are listed below:
currentValue: It is required parameter and it holds the value of current element.
index: It is optional parameter and it holds the index of current element.
arr: It is optional parameter and it holds the array.
thisValue: It is optional parameter and used to hold the value of passed to the function.

function inside the map method is executed for every ele in the array and that result is added to new array

----------

      {[<ExpenseFilter/>,<Card/>]}  JSX will treat the objects in tha array side by side
      
      SetExpense([newlyadded,...expenses])  is not a good way of handling additions we should send parameter to it whcih is sent by default
      
      SetExpense( (prevexpense) => {  return [newlyadded,...prevexpenses] } )  prevExpense is efault objevt we get on update state 
      
 ------
                     Understanding Keys
                     
      When we add item an extra div is added at end and all divs are revisted and shifted down to adjust the newly added which is not a great way 
      
      
  ------
                                               Conditional rendering
              
            WE can use Ternary operation to do that 
            
            condtion === something ? (then) : (else) 
            
             let expensesContent=<p>No Expenses Found.</p>;  this is allowed 
             
             
  let expensesContent=<p>No Expenses Found.</p>;

  if(filteredExpenses.length>0){
    expensesContent=filteredExpenses.map((expense) => (
      <ExpenseItem
        key={expense.id}
        title={expense.title}
        amount={expense.amount}
        date={expense.date}
      />
    ))
  }
  
  -------------
                                           Dynamic Styling
                                           
             Style in recat return needs an object style={{"back-color":"red"}}    needs key value pairs 
             
